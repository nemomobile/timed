#!/bin/sh -e

function fail
{
  echo $*
  exit 1
}

# uncomment the next line if in troubles:
# set -o xtrace

LISTING_PRG="$1"
PREFIX="$2"
test -n "$LISTING_PRG" &&
test -n "$PREFIX" ||
  fail "Usage: $0 listing_script prefix_file"

test -x "$LISTING_PRG" ||
  fail "$LISTING_PRG: is not executable"

cat "$PREFIX" > /dev/null ||
  fail "can't read $PREFIX"

# check for 'pcregrep'
echo ok | pcregrep >/dev/null ok ||
  fail "'pcregrep' doesn't work"

# check for 'md5sum'
test $(echo -n|md5sum|awk '{print $1}') = 'd41d8cd98f00b204e9800998ecf8427e' ||
  fail "'md5sum' doesn't work"

# check for 'head'
test $(echo -n abcdefgh | head --bytes=3) = 'abc' ||
  fail "'head' doesn't work"

# check for tail
test $(echo -n abcdefgh | tail --bytes=+3) = 'cdefgh' &&
test $(echo -n abcdefgh | tail --bytes=+0) = 'abcdefgh' &&
test $(echo -n abcdefgh | tail --bytes=+1) = 'abcdefgh' ||
  fail "'tail' doesn't work"

# check for git-log
git log $PREFIX > /dev/null ||
  fail "'git-log' failed to read log of the prefix file"

# check for git-show
git show --pretty=full HEAD:$PREFIX > /dev/null ||
  fail "'git-show' failed to read the prefix file"

# check that prefix file is commited
test "$(git show --pretty=full HEAD:$PREFIX)" = "$(cat $PREFIX)" ||
  fail "latest $PREFIX version isn't equal to HEAD version"

# add ./ to LISTING script
if ! echo $LISTING_PRG | pcregrep >/dev/null '^/' ; then
  LISTING_PRG="./$LISTING_PRG"
  echo "using $LISTING_PRG as the listing script"
fi

commits=$(git log "$PREFIX" | pcregrep '^commit\s+[a-fA-F0-9]+$' | awk '{print $2}')
files=$($LISTING_PRG)

for file in $files ; do test "$file" != "$PREFIX" ; done

# echo commits="'$commits'"
for sha in $commits ; do
  len=$(git show --pretty=full $sha:$PREFIX | wc -c)
  md5=$(git show --pretty=full $sha:$PREFIX | md5sum | awk '{print $1}')
  versions="$versions $sha:$len:$md5"
done

# for i in $versions ; do echo $i ; done
# echo versions="'$versions'"

for file in $files ; do
  prefix_length=0
  for ver in $versions ; do
    # echo ver="'$ver'"
    sha=$(echo $ver | awk -F: '{print $1}')
    len=$(echo $ver | awk -F: '{print $2}')
    md5=$(echo $ver | awk -F: '{print $3}')
    # echo sha="'$sha'" len="'$len'" md5="'$md5'"
    head_md5=$(cat $file | head --bytes=$len | md5sum | awk '{print $1}')
    if [ $md5 = $head_md5 ] ; then
      prefix_length=$len
      break
    fi
  done
  # tail is a weird utility, need to add 1 in order to skip bytes
  let tail_param=$prefix_length+1
  text=$( cat $PREFIX ; ( cat $file | tail --bytes=+$tail_param) )
  if [ "$text" != "$(cat $file)" ] ; then
    echo "$file: removing $prefix_length bytes"
    echo "$text" > $file
  fi
done
